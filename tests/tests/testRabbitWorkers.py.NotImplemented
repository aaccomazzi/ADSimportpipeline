# -*- coding: utf-8 -*-
import unittest
import sys, os
PROJECT_HOME = os.path.abspath(os.path.join(os.path.dirname(__file__),'../../'))
sys.path.append(PROJECT_HOME)

from pipeline import workers
from pipeline import psettings


class TestBibcodeFiles(unittest.TestCase):
  def setUp(self):
    self.workers = psettings.WORKERS
    self.routes = psettings.RABBITMQ_ROUTES
    self.rabbitmq_url = psettings.RABBITMQ_URL

    w = workers.RabbitMQWorker()
    w.connect(self.rabbitmq_url)
    w.declare_all(*[self.routes[i] for i in ['EXCHANGES','QUEUES','BINDINGS']])
    w.connection.close()

    self.connection = pika.BlockingConnection(pika.URLParameters(self.rabbitmq_url))
    self.channel = self.connection.channel()
    self.channel.basic_qos(prefetch_count=1)

  def test_FindNewRecordsWorker(self):
    params = psettings.WORKERS['FindNewRecordsWorker']
    params['RABBITMQ_URL'] = psettings.RABBITMQ_URL
    params['ERROR_HANDLER'] = psettings.ERROR_HANDLER
    workers.FindNewRecordsWorker()


  def tearDown(self):
    self.connection.close()


if __name__ == '__main__':
    unittest.main()
